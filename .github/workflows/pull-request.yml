name: Pull Request

on:
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:coverage

      - name: Upload unit test coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage/
          retention-days: 5

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          E2E_USERNAME: ${{ secrets.E2E_USERNAME }}
          E2E_PASSWORD: ${{ secrets.E2E_PASSWORD }}
          E2E_USERNAME_ID: ${{ secrets.E2E_USERNAME_ID }}
          CI: true
        run: npm run test:e2e

      - name: Upload E2E test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: playwright-report/
          retention-days: 5

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, unit-test, e2e-test]
    if: always()
    permissions:
      pull-requests: write
    steps:
      - name: Download unit test coverage
        uses: actions/download-artifact@v5
        with:
          name: unit-coverage
          path: coverage/
        continue-on-error: true

      - name: Download E2E test report
        uses: actions/download-artifact@v5
        with:
          name: e2e-report
          path: playwright-report/
        continue-on-error: true

      - name: Comment on PR
        uses: actions/github-script@v8
        with:
          script: |
            const lintStatus = '${{ needs.lint.result }}';
            const unitTestStatus = '${{ needs.unit-test.result }}';
            const e2eTestStatus = '${{ needs.e2e-test.result }}';

            const getStatusIcon = (status) => {
              if (status === 'success') return '✅';
              if (status === 'failure') return '❌';
              if (status === 'cancelled') return '🚫';
              return '⏭️';
            };

            const allSuccess = lintStatus === 'success' && unitTestStatus === 'success' && e2eTestStatus === 'success';
            const overallStatus = allSuccess ? '✅ All checks passed!' : '❌ Some checks failed';

            let comment = `## ${overallStatus}

            | Job | Status |
            |-----|--------|
            | Lint | ${getStatusIcon(lintStatus)} ${lintStatus} |
            | Unit Tests | ${getStatusIcon(unitTestStatus)} ${unitTestStatus} |
            | E2E Tests | ${getStatusIcon(e2eTestStatus)} ${e2eTestStatus} |

            ### 📊 Coverage Reports
            - [Unit Test Coverage](${context.payload.repository.html_url}/actions/runs/${context.runId}#artifacts) (download artifact: \`unit-coverage\`)
            - [E2E Test Report](${context.payload.repository.html_url}/actions/runs/${context.runId}#artifacts) (download artifact: \`e2e-report\`)

            [View workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId})`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });